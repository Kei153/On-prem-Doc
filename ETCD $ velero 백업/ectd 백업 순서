-- etcd 백업을 위한 스크립트 --

ETCDCTL_API=3 etcdctl snapshot save /k8s_backup/db.snapshot \
  --endpoints=https://(etcd 클러스터의 ip - 복제할 etcd가 있는 클러스터 노드 ip):2379 \
  --cacert=/etc/ssl/etcd/ssl/ca.pem \
  --cert=/etc/ssl/etcd/ssl/node-master-2.pem \
  --key=/etc/ssl/etcd/ssl/node-master-2-key.pem

-- 해석 --
/k8s_backup(작업 root 경로. 보통 사용자로 로그인 하면 나오는 현 디렉토리)/db.snapshot 파일로 저장합니다. 
snapshot save는 etcd 클러스터의 전체 상태(데이터)를 파일로 백업하는 작업.

  --cacert=/etc/ssl/etcd/ssl/ca.pem \
  --cert=/etc/ssl/etcd/ssl/node-master-2.pem \
  --key=/etc/ssl/etcd/ssl/node-master-2-key.pem 
https 통신으로 백업하기위한 빌드업








-- etcd 복구 명령 --
** 더 자료 알아보고 복구 하기 **
** 토큰 설정은 어떻게 뭘로 하나? **

ETCDCTL_API=3 etcdctl snapshot restore /k8s_backup/db.snapshot \
  --name <new-etcd-name> \
  --data-dir /var/lib/etcd-new \
  --initial-cluster <new-etcd-name = etcd-cluster-name>=http://localhost:2380 \
  --initial-cluster-token <new-etcd-token> \
  --initial-cluster-state existing \
  --cert=/etc/ssl/etcd/ssl/node-master-2.pem \
  --key=/etc/ssl/etcd/ssl/node-master-2-key.pem \
  --cacert=/etc/ssl/etcd/ssl/ca.pem

-- 해석 --
--data-dir </var/lib/etcd-new - 예시. 바꿀 수 있음. 하기 전 클러스터 노드 pc의 스펙 분배 잘하기>
복원된 데이터가 저장될 디렉토리를 지정합니다. 새 디렉토리를 지정하여 기존 데이터와 겹치지 않도록 합니다.
--initial-cluster-state existing: 클러스터 상태를 existing으로 설정하여, 기존 클러스터를 복원하도록 지정




