1. 먼저 가상머신을 구성한다. 내 컴퓨터 환경은 맥os여서 호환 잘 되는 UTM을 설치하여 구성 하였다.
  UTM은 가상머신 만들 이미지가 필요하기 때문에 k8s를 지원하는 우분투 이미지를 다운 받는다.

  - UTM 설치
    brew install --cask utm
  - 우분투 이미지 다운로드 (내 로컬 컴퓨터 os에 맞는 이미지 다운하기)
     https://cdimage.ubuntu.com/releases/22.04/release/ (for 맥북)
    https://releases.ubuntu.com/22.04/ (amd)
    
    
🪛 1단계: 새 가상머신 만들기
UTM 실행 > 상단 메뉴에서 + 버튼 클릭 (새 가상 머신 만들기)
"Virtualize" 선택
운영 체제: "Linux" 선택
부트 이미지 선택(Boot ISO Image): '탐색' 버튼 누르고 다운받은 ubuntu-22.04-live-server-amd64.iso 선택
메모리 - 4기가 CPU - 2core Storage - 30Gib 공유 폴더  - 건너뛰기 (default)
Summary 에서 이름 정하고 저장

2단계: 가상머신 구성하기
  만든 가상머신 켜기. 켜면 부팅 화면 나옴
  - 적당히 선택한다. 영어 등등.. 업뎃은 나중에 등으로
  - ubuntu server로 선택하고 설치/ network, proxy configuration 은 건너뛰기
  - mirror configuration 기다리고 다 끝나명 다음
  - 나머지는 그냥 정해진 대로.. 마지막 profile configuration 만 잘 설정
  - 그 뒤 나오는 ssh configuration  잘 설정.(install openssh server 체크)
  - featured server snaps 는 건너뛰기
  - install complete! 될 때가지 기다리고 다 되면 reboot
  - reboot하고 로그인 화면 안나오고 커서만 깜박이면 우측 상단에서 두번째에 위치한 Drive image options 에서 
  꺼내기를 누르고 Linux 2 옆에 위치한 Restarts the VM 을 눌러 재부팅하면 정상적으로 실행이 된다.
  (출처: https://ssunw.tistory.com/entry/M1-mac-가상환경에-Linux-설치하기UTM-Ubuntu [ssunw:티스토리])






--------------------------------------------------------------------------

** 클러스터 구성 **

1. 먼저 내 로컬 PC에서 비번없이 ssh만으로 접속 가능하게 키 복사/저장 작업
  - 내 로컬에서 키를 만든다. (저장 경로는 ~/.ssh/id_rsa 로 함)
    명령어 : ssh-keygen -t rsa -b 4096 (password 없이 만듬)
    만들어진 키 중 pub키를 접근 할 가상 머신에 복사
    명령어 : ssh-copy-id -i ~/.ssh/id_rsa.pub <user>@<nodeIP>
    처음 한 번은 비밀번호를 묻습니다 (정상)
    성공하면 복사한 각 노드의 ~/.ssh/authorized_keys 에 공개키가 자동 추가됨
    접속 테스트 : ssh <user>@<nodeIP>

2. 마스터 노드로 정할 서버에 접속해서 k8s 구성 준비
  - 마스터에서 노드로의 비번 없는 ssh 접속을 위해 1번 과정 반복

3. ansible 공식 홈페이지 참조 :  https://kubespray.io/#/docs/ansible/ansible (ansible 설치 참조)
  - - 먼저 kubespray 패키지 다운로드 : git clone https://github.com/kubernetes-sigs/kubespray.git
	-  ~kubespray 생긴거 확인
	- kubespray 디렉토리에서 작업 
	- 명령어 : sudo apt install python3.10-venv (가상화 환경에서 kubespray 설치 위해)

4. ansible 문서에 쉘 세션 실행. 마지막 ‘pip install -U -r requirements.txt’ 까지 설치.
    - # sample 디렉토리를 기준으로 실제로 작업할 폴더를 복사한다
		: project_name=<이름 정하기>
		: cp -rfp inventory/sample inventory/${project_name}
    - 필요한 설정 값들 해당 문서 편집기로 작성
		: cd inventory/${project-name}/group_vars/k8s_cluster/addons.yaml
			- # helm 사용
				helm_enabled: true
				metrics_server_enabled: true

		: cd inventory/${project-name}/group_vars/k8s_cluster/k8s-cluster.yml
			- (…)
			- kube_proxy_strict_arp: true
			- (…)
			- auto_renew_certificates: true

		: inventory/${project-name}/inventory.ini
			[all]
			master ansible_host=10.0.2.4 ip=10.0.2.4 ansible_user=laonpeople
			worker ansible_host=10.0.2.5 ip=10.0.2.5 ansible_user=laonpeople

			[kube_control_plane]
			master

			[etcd:children]
			kube_control_plane

			[kube_node]
			worker

5. 설치
- ansible-playbook -i inventory/${project_name}/inventory.ini --become --become-user=root cluster.yml -K
			(--become --become-user=root 는 ansible문서 에서 become 검색하면 나옴. root로 설치 한다는 말임. -K는 암호랑 암튼 실행?)

6. 설치 후, kubespray 가상화 로그 아웃 하기 python-venv 
		명령어 : deactivate

7. ‘root’ 권한으로 실행 : kubectl get no 



