pv : 창고 / pvc : 창고 대여 요청서 / storageclass : 요청서만 보고 알맞은 창고 만들어 주고 연결(규칙/정책 <어떻게 만들지>) / nfs-provisioner : 실제로 PV를 만들어주는 컨트롤러(프로그램)

 storageclass 요청서 분석해서 창고 공간 전개도 그리는 건축자나 건축사, nfs-provisioner는 사람이 정해준 거 시킨대로 만드는 기계
(nfs-provisioner 가 없음 안됨 사람이 요청대로 설계도 짜도 기계없음 창고 못 만듬)
[PVC]
  │
  │ (storageClassName: nfs-storage)
  ▼
[StorageClass]
  provisioner: nfs-provisioner.example.com
  ▼
[nfs-provisioner 컨트롤러 (Pod)]
  ▼
[NFS 서버에 디렉토리 만들고 → PV 생성 → PVC에 연결]


1. nfs로 쓸 가상머신 서버 하나 만든다.
2. 필수 패키지 설치 : sudo apt-get update -y
                  sudo apt-get install -y nfs-common nfs-kernel-server rpcbind

3. NFS export 디렉토리 생성 :
   sudo mkdir -p /data/jenkins
   sudo chown nobody:nogroup /data/jenkins
   sudo chmod 777 /data/jenkins  # 테스트용 권한 (운영용은 tighter)

4. /etc/exports 에 경로 등록 : 
   echo "/data/jenkins *(rw,sync,no_subtree_check,no_root_squash)" | sudo tee -a /etc/exports
    (*는 모든 IP에서 접근 가능하게 함
     운영 환경에선 192.168.64.0/24 같이 서브넷으로 제한 추천)

5. NFS 서버 재시작 : 
   sudo exportfs -ra
   sudo systemctl restart nfs-kernel-server

6. 방화벽/포트 확인 (필요 시) : 
   UTM NAT 또는 포트포워딩 쓰는 경우
   NFS는 보통 TCP/UDP 2049 포트 사용함
     확인 방법 : sudo ufw status verbose - Status: inactive이면 → 방화벽 꺼져 있음 (접속 제한 없음) / Status: active이면 → 아래처럼 포트 열어줘야 해
                 sudo ufw allow from <K8s_Nodes_IP>/24 to any port 2049 proto tcp
                 sudo ufw allow from <K8s_Nodes_IP>/24 to any port 2049 proto udp
     포트 오픈 상태 확인 : sudo ss -tulpn | grep 2049

7. export 반영 및 NFS 재시작 :
    sudo exportfs -ra
    sudo systemctl restart nfs-kernel-server

8.  (K8s 노드에서) mount 테스트 : 
     sudo apt install -y nfs-common  # 모든 노드에서 한 번만 설치
     sudo mount -t nfs <NFS서버IP>:/data/ /nfs (이건 마스터 노드에서만)
     ls /nfs  # → 접근 잘 되면 OK! (이거 test 할려면 nfs 마운트 서버에 뭐라도 있어야 함)
    (** 중요한 점인데, 마스터 노드에 내가 마운트할 하위 디렉토리 경로는 미리 만들고 helm install 이든 upgrade든 해야함)

9. helm repo 로 설치 하는데, 설치할 때 (해당 디렉토리의)스토리지 클래스를 만드는 명령어 포함해서 설치
   -- values.yaml 파일을 수정 먼저 한다. nfs.server 에 nfs 서버 주소만 수정 하믄 됨. 나머지는 설치하며 진행
   -- nfs-provisioner.yaml 파일에 설치시 디렉토리 경로 확인 정도 하고 설치
   -- 







